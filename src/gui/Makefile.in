# Makefile.in generated by automake 1.9.6 from Makefile.am.
# KDE tags expanded automatically by am_edit - $Revision: 435799 $ 
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@


srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
target_triplet = @target@
subdir = src/gui
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/admin/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libgui_la_DEPENDENCIES =  \
	$(top_builddir)/src/gui/itemeditor/libitemeditor.la
am_libgui_la_OBJECTS = contexthelp.lo doublespinbox.lo itemselector.lo \
	microsettingsdlg.lo newfiledlg.lo outputmethoddlg.lo \
	settingsdlg.lo oscilloscope.lo oscilloscopeview.lo \
	probepositioner.lo logview.lo projectdlgs.lo \
	microselectwidget.lo symbolviewer.lo programmerdlg.lo \
	colorcombo.lo scopescreenview.lo scopescreen.lo \
	scopeviewbase.lo richtexteditor.lo lineedit.lo
#>- libgui_la_OBJECTS = $(am_libgui_la_OBJECTS)
#>+ 10
libgui_la_final_OBJECTS = libgui_la.all_cpp.lo 
libgui_la_nofinal_OBJECTS = contexthelp.lo doublespinbox.lo itemselector.lo \
	microsettingsdlg.lo newfiledlg.lo outputmethoddlg.lo \
	settingsdlg.lo oscilloscope.lo oscilloscopeview.lo \
	probepositioner.lo logview.lo projectdlgs.lo \
	microselectwidget.lo symbolviewer.lo programmerdlg.lo \
	colorcombo.lo scopescreenview.lo scopescreen.lo \
	scopeviewbase.lo richtexteditor.lo lineedit.lo asmformattingwidget.lo gpasmsettingswidget.lo logicwidget.lo newfilewidget.lo newprojectwidget.lo outputmethodwidget.lo microsettingswidget.lo oscilloscopewidget.lo generaloptionswidget.lo createsubprojectwidget.lo processingoptionswidget.lo sdccoptionswidget.lo linkeroptionswidget.lo picprogrammerconfigwidget.lo newpinmappingwidget.lo programmerwidget.lo contexthelpwidget.lo scopescreenwidget.lo
@KDE_USE_FINAL_FALSE@libgui_la_OBJECTS = $(libgui_la_nofinal_OBJECTS)
@KDE_USE_FINAL_TRUE@libgui_la_OBJECTS = $(libgui_la_final_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/admin/depcomp
am__depfiles_maybe = depfiles
#>- CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
#>- 	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 2
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
#>- LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
#>- 	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
#>- 	$(AM_CXXFLAGS) $(CXXFLAGS)
#>+ 3
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS) $(KDE_CXXFLAGS)
CXXLD = $(CXX)
#>- CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
#>- 	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
#>+ 2
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(KDE_CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(libgui_la_SOURCES)
DIST_SOURCES = $(libgui_la_SOURCES)
#>- RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
#>- 	html-recursive info-recursive install-data-recursive \
#>- 	install-exec-recursive install-info-recursive \
#>- 	install-recursive installcheck-recursive installdirs-recursive \
#>- 	pdf-recursive ps-recursive uninstall-info-recursive \
#>- 	uninstall-recursive
#>+ 6
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-exec-recursive install-info-recursive \
	install-recursive installcheck-recursive installdirs-recursive \
	pdf-recursive ps-recursive uninstall-info-recursive \
	uninstall-recursive nmcheck-recursive bcheck-recursive
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
#>- DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
#>+ 1
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST) $(KDE_DIST)
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
ARTSCCONFIG = @ARTSCCONFIG@
AUTOCONF = @AUTOCONF@
AUTODIRS = @AUTODIRS@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONF_FILES = @CONF_FILES@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DCOPIDL = @DCOPIDL@
DCOPIDL2CPP = @DCOPIDL2CPP@
DCOPIDLNG = @DCOPIDLNG@
DCOP_DEPENDENCIES = @DCOP_DEPENDENCIES@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLE_PERMISSIVE_FLAG = @ENABLE_PERMISSIVE_FLAG@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
FRAMEWORK_COREAUDIO = @FRAMEWORK_COREAUDIO@
GMSGFMT = @GMSGFMT@
HAVE_GCC_VISIBILITY = @HAVE_GCC_VISIBILITY@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
KCFG_DEPENDENCIES = @KCFG_DEPENDENCIES@
KCONFIG_COMPILER = @KCONFIG_COMPILER@
KDECONFIG = @KDECONFIG@
KDE_CHECK_PLUGIN = @KDE_CHECK_PLUGIN@
KDE_EXTRA_RPATH = @KDE_EXTRA_RPATH@
KDE_INCLUDES = @KDE_INCLUDES@
KDE_LDFLAGS = @KDE_LDFLAGS@
KDE_MT_LDFLAGS = @KDE_MT_LDFLAGS@
KDE_MT_LIBS = @KDE_MT_LIBS@
KDE_NO_UNDEFINED = @KDE_NO_UNDEFINED@
KDE_PLUGIN = @KDE_PLUGIN@
KDE_RPATH = @KDE_RPATH@
KDE_USE_CLOSURE_FALSE = @KDE_USE_CLOSURE_FALSE@
KDE_USE_CLOSURE_TRUE = @KDE_USE_CLOSURE_TRUE@
KDE_USE_FINAL_FALSE = @KDE_USE_FINAL_FALSE@
KDE_USE_FINAL_TRUE = @KDE_USE_FINAL_TRUE@
KDE_USE_FPIE = @KDE_USE_FPIE@
KDE_USE_NMCHECK_FALSE = @KDE_USE_NMCHECK_FALSE@
KDE_USE_NMCHECK_TRUE = @KDE_USE_NMCHECK_TRUE@
KDE_USE_PIE = @KDE_USE_PIE@
KDE_XSL_STYLESHEET = @KDE_XSL_STYLESHEET@
LDFLAGS = @LDFLAGS@
LDFLAGS_AS_NEEDED = @LDFLAGS_AS_NEEDED@
LDFLAGS_NEW_DTAGS = @LDFLAGS_NEW_DTAGS@
LIBCOMPAT = @LIBCOMPAT@
LIBCRYPT = @LIBCRYPT@
LIBDL = @LIBDL@
LIBJPEG = @LIBJPEG@
LIBOBJS = @LIBOBJS@
LIBPNG = @LIBPNG@
LIBPTHREAD = @LIBPTHREAD@
LIBRESOLV = @LIBRESOLV@
LIBS = @LIBS@
LIBSM = @LIBSM@
LIBSOCKET = @LIBSOCKET@
LIBTOOL = @LIBTOOL@
LIBUCB = @LIBUCB@
LIBUTIL = @LIBUTIL@
LIBZ = @LIBZ@
LIB_GPSIM = @LIB_GPSIM@
LIB_KAB = @LIB_KAB@
LIB_KABC = @LIB_KABC@
LIB_KDECORE = @LIB_KDECORE@
LIB_KDED = @LIB_KDED@
LIB_KDEPIM = @LIB_KDEPIM@
LIB_KDEPRINT = @LIB_KDEPRINT@
LIB_KDEUI = @LIB_KDEUI@
LIB_KDNSSD = @LIB_KDNSSD@
LIB_KFILE = @LIB_KFILE@
LIB_KFM = @LIB_KFM@
LIB_KHTML = @LIB_KHTML@
LIB_KIMPROXY = @LIB_KIMPROXY@
LIB_KIO = @LIB_KIO@
LIB_KJS = @LIB_KJS@
LIB_KNEWSTUFF = @LIB_KNEWSTUFF@
LIB_KPARTS = @LIB_KPARTS@
LIB_KSPELL = @LIB_KSPELL@
LIB_KSYCOCA = @LIB_KSYCOCA@
LIB_KUNITTEST = @LIB_KUNITTEST@
LIB_KUTILS = @LIB_KUTILS@
LIB_POLL = @LIB_POLL@
LIB_QPE = @LIB_QPE@
LIB_QT = @LIB_QT@
LIB_SMB = @LIB_SMB@
LIB_X11 = @LIB_X11@
LIB_XEXT = @LIB_XEXT@
LIB_XRENDER = @LIB_XRENDER@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAKEKDEWIDGETS = @MAKEKDEWIDGETS@
MCOPIDL = @MCOPIDL@
MEINPROC = @MEINPROC@
MOC = @MOC@
MSGFMT = @MSGFMT@
NOOPT_CFLAGS = @NOOPT_CFLAGS@
NOOPT_CXXFLAGS = @NOOPT_CXXFLAGS@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
PERL = @PERL@
QTE_NORTTI = @QTE_NORTTI@
QT_INCLUDES = @QT_INCLUDES@
QT_LDFLAGS = @QT_LDFLAGS@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
TOPSUBDIRS = @TOPSUBDIRS@
UIC = @UIC@
UIC_TR = @UIC_TR@
USER_INCLUDES = @USER_INCLUDES@
USER_LDFLAGS = @USER_LDFLAGS@
USE_EXCEPTIONS = @USE_EXCEPTIONS@
USE_RTTI = @USE_RTTI@
USE_THREADS = @USE_THREADS@
VERSION = @VERSION@
WOVERLOADED_VIRTUAL = @WOVERLOADED_VIRTUAL@
XGETTEXT = @XGETTEXT@
XMLLINT = @XMLLINT@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_INCLUDES = @X_INCLUDES@
X_LDFLAGS = @X_LDFLAGS@
X_PRE_LIBS = @X_PRE_LIBS@
X_RPATH = @X_RPATH@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
all_includes = @all_includes@
all_libraries = @all_libraries@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
glib_cflags = @glib_cflags@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
include_ARTS_FALSE = @include_ARTS_FALSE@
include_ARTS_TRUE = @include_ARTS_TRUE@
include_x11_FALSE = @include_x11_FALSE@
include_x11_TRUE = @include_x11_TRUE@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
kde_appsdir = @kde_appsdir@
kde_bindir = @kde_bindir@
kde_confdir = @kde_confdir@
kde_datadir = @kde_datadir@
kde_htmldir = @kde_htmldir@
kde_icondir = @kde_icondir@
kde_includes = @kde_includes@
kde_kcfgdir = @kde_kcfgdir@
kde_libraries = @kde_libraries@
kde_libs_htmldir = @kde_libs_htmldir@
kde_libs_prefix = @kde_libs_prefix@
kde_locale = @kde_locale@
kde_mimedir = @kde_mimedir@
kde_moduledir = @kde_moduledir@
kde_qtver = @kde_qtver@
kde_servicesdir = @kde_servicesdir@
kde_servicetypesdir = @kde_servicetypesdir@
kde_sounddir = @kde_sounddir@
kde_styledir = @kde_styledir@
kde_templatesdir = @kde_templatesdir@
kde_wallpaperdir = @kde_wallpaperdir@
kde_widgetdir = @kde_widgetdir@
kdeinitdir = @kdeinitdir@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
prefix = @prefix@
program_transform_name = @program_transform_name@
qt_includes = @qt_includes@
qt_libraries = @qt_libraries@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target = @target@
target_alias = @target_alias@
target_cpu = @target_cpu@
target_os = @target_os@
target_vendor = @target_vendor@
unsermake_enable_pch_FALSE = @unsermake_enable_pch_FALSE@
unsermake_enable_pch_TRUE = @unsermake_enable_pch_TRUE@
x_includes = @x_includes@
x_libraries = @x_libraries@
xdg_appsdir = @xdg_appsdir@
xdg_directorydir = @xdg_directorydir@
xdg_menudir = @xdg_menudir@
INCLUDES = -I$(top_srcdir)/src -I$(top_srcdir)/src/core \
	-I$(top_srcdir)/src/electronics -I$(top_srcdir)/src/electronics/components \
	-I$(top_srcdir)/src/electronics/simulation -I$(top_srcdir)/src/flowparts -I$(top_srcdir)/src/gui \
	-I$(top_srcdir)/src/languages -I$(top_srcdir)/src/mechanics -I$(top_srcdir)/src/micro \
	-I$(top_srcdir)/gpsim-interface $(all_includes)

#>- METASOURCES = AUTO
noinst_LTLIBRARIES = libgui.la
#>- libgui_la_SOURCES = contexthelp.cpp doublespinbox.cpp itemselector.cpp \
#>- 	microsettingsdlg.cpp newfiledlg.cpp outputmethoddlg.cpp asmformattingwidget.ui \
#>- 	gpasmsettingswidget.ui logicwidget.ui newfilewidget.ui newprojectwidget.ui \
#>- 	outputmethodwidget.ui microsettingswidget.ui settingsdlg.cpp oscilloscope.cpp \
#>- 	oscilloscopewidget.ui oscilloscopeview.cpp probepositioner.cpp generaloptionswidget.ui \
#>- 	logview.cpp createsubprojectwidget.ui processingoptionswidget.ui \
#>- 	sdccoptionswidget.ui projectdlgs.cpp linkeroptionswidget.ui microselectwidget.cpp \
#>- 	symbolviewer.cpp picprogrammerconfigwidget.ui newpinmappingwidget.ui programmerwidget.ui \
#>- 	programmerdlg.cpp colorcombo.cpp contexthelpwidget.ui scopescreenwidget.ui \
#>- 	scopescreenview.cpp scopescreen.cpp scopeviewbase.cpp richtexteditor.cpp lineedit.cpp
#>+ 10
libgui_la_SOURCES=contexthelp.cpp doublespinbox.cpp itemselector.cpp \
	microsettingsdlg.cpp newfiledlg.cpp outputmethoddlg.cpp  \
	    \
	  settingsdlg.cpp oscilloscope.cpp \
	 oscilloscopeview.cpp probepositioner.cpp  \
	logview.cpp   \
	 projectdlgs.cpp  microselectwidget.cpp \
	symbolviewer.cpp    \
	programmerdlg.cpp colorcombo.cpp   \
	scopescreenview.cpp scopescreen.cpp scopeviewbase.cpp richtexteditor.cpp lineedit.cpp asmformattingwidget.cpp gpasmsettingswidget.cpp logicwidget.cpp newfilewidget.cpp newprojectwidget.cpp outputmethodwidget.cpp microsettingswidget.cpp oscilloscopewidget.cpp generaloptionswidget.cpp createsubprojectwidget.cpp processingoptionswidget.cpp sdccoptionswidget.cpp linkeroptionswidget.cpp picprogrammerconfigwidget.cpp newpinmappingwidget.cpp programmerwidget.cpp contexthelpwidget.cpp scopescreenwidget.cpp

libgui_la_PCH = AUTO
noinst_HEADERS = settingsdlg.h oscilloscope.h oscilloscopeview.h \
	probepositioner.h projectdlgs.h microselectwidget.h symbolviewer.h programmerdlg.h \
	colorcombo.h scopescreenview.h scopescreen.h scopeviewbase.h richtexteditor.h \
	lineedit.h

SUBDIRS = itemeditor
libgui_la_LIBADD = $(top_builddir)/src/gui/itemeditor/libitemeditor.la
#>- all: all-recursive
#>+ 1
all: docs-am  all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
#>- 	@for dep in $?; do \
#>- 	  case '$(am__configure_deps)' in \
#>- 	    *$$dep*) \
#>- 	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
#>- 		&& exit 0; \
#>- 	      exit 1;; \
#>- 	  esac; \
#>- 	done; \
#>- 	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/gui/Makefile'; \
#>- 	cd $(top_srcdir) && \
#>- 	  $(AUTOMAKE) --gnu  src/gui/Makefile
#>+ 12
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/gui/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/gui/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/gui/Makefile.in
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libgui.la: $(libgui_la_OBJECTS) $(libgui_la_DEPENDENCIES) 
	$(CXXLINK)  $(libgui_la_LDFLAGS) $(libgui_la_OBJECTS) $(libgui_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/colorcombo.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/contexthelp.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/doublespinbox.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/itemselector.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/lineedit.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/logview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/microselectwidget.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/microsettingsdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/newfiledlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oscilloscope.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/oscilloscopeview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/outputmethoddlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/probepositioner.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/programmerdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/projectdlgs.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/richtexteditor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scopescreen.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scopescreenview.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/scopeviewbase.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/settingsdlg.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/symbolviewer.Plo@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

mostlyclean-recursive clean-recursive distclean-recursive \
maintainer-clean-recursive:
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(mkdir_p) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LTLIBRARIES) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
#>- clean: clean-recursive
#>+ 1
clean: kde-rpo-clean  clean-recursive

#>- clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
#>- 	mostlyclean-am
#>+ 2
clean-am: clean-metasources clean-ui clean-bcheck clean-final  clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-exec-am:

install-info: install-info-recursive

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-info-am

uninstall-info: uninstall-info-recursive

.PHONY: $(RECURSIVE_TARGETS) CTAGS GTAGS all all-am check check-am \
	clean clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-recursive ctags ctags-recursive distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-recursive distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs installdirs-am maintainer-clean \
	maintainer-clean-generic maintainer-clean-recursive \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool mostlyclean-recursive pdf pdf-am ps ps-am \
	tags tags-recursive uninstall uninstall-am uninstall-info-am

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:

#>+ 3
oscilloscope.moc: $(srcdir)/oscilloscope.h
	$(MOC) $(srcdir)/oscilloscope.h -o oscilloscope.moc

#>+ 2
mocs: oscilloscope.moc

#>+ 3
itemselector.moc: $(srcdir)/itemselector.h
	$(MOC) $(srcdir)/itemselector.h -o itemselector.moc

#>+ 2
mocs: itemselector.moc

#>+ 3
lineedit.moc: $(srcdir)/lineedit.h
	$(MOC) $(srcdir)/lineedit.h -o lineedit.moc

#>+ 2
mocs: lineedit.moc

#>+ 3
microsettingsdlg.moc: $(srcdir)/microsettingsdlg.h
	$(MOC) $(srcdir)/microsettingsdlg.h -o microsettingsdlg.moc

#>+ 2
mocs: microsettingsdlg.moc

#>+ 3
scopescreenview.moc: $(srcdir)/scopescreenview.h
	$(MOC) $(srcdir)/scopescreenview.h -o scopescreenview.moc

#>+ 2
mocs: scopescreenview.moc

#>+ 3
newfiledlg.moc: $(srcdir)/newfiledlg.h
	$(MOC) $(srcdir)/newfiledlg.h -o newfiledlg.moc

#>+ 2
mocs: newfiledlg.moc

#>+ 3
microselectwidget.moc: $(srcdir)/microselectwidget.h
	$(MOC) $(srcdir)/microselectwidget.h -o microselectwidget.moc

#>+ 2
mocs: microselectwidget.moc

#>+ 3
programmerdlg.moc: $(srcdir)/programmerdlg.h
	$(MOC) $(srcdir)/programmerdlg.h -o programmerdlg.moc

#>+ 2
mocs: programmerdlg.moc

#>+ 3
contexthelp.moc: $(srcdir)/contexthelp.h
	$(MOC) $(srcdir)/contexthelp.h -o contexthelp.moc

#>+ 2
mocs: contexthelp.moc

#>+ 3
colorcombo.moc: $(srcdir)/colorcombo.h
	$(MOC) $(srcdir)/colorcombo.h -o colorcombo.moc

#>+ 2
mocs: colorcombo.moc

#>+ 3
oscilloscopeview.moc: $(srcdir)/oscilloscopeview.h
	$(MOC) $(srcdir)/oscilloscopeview.h -o oscilloscopeview.moc

#>+ 2
mocs: oscilloscopeview.moc

#>+ 3
scopeviewbase.moc: $(srcdir)/scopeviewbase.h
	$(MOC) $(srcdir)/scopeviewbase.h -o scopeviewbase.moc

#>+ 2
mocs: scopeviewbase.moc

#>+ 3
probepositioner.moc: $(srcdir)/probepositioner.h
	$(MOC) $(srcdir)/probepositioner.h -o probepositioner.moc

#>+ 2
mocs: probepositioner.moc

#>+ 3
settingsdlg.moc: $(srcdir)/settingsdlg.h
	$(MOC) $(srcdir)/settingsdlg.h -o settingsdlg.moc

#>+ 2
mocs: settingsdlg.moc

#>+ 3
symbolviewer.moc: $(srcdir)/symbolviewer.h
	$(MOC) $(srcdir)/symbolviewer.h -o symbolviewer.moc

#>+ 2
mocs: symbolviewer.moc

#>+ 3
projectdlgs.moc: $(srcdir)/projectdlgs.h
	$(MOC) $(srcdir)/projectdlgs.h -o projectdlgs.moc

#>+ 2
mocs: projectdlgs.moc

#>+ 3
doublespinbox.moc: $(srcdir)/doublespinbox.h
	$(MOC) $(srcdir)/doublespinbox.h -o doublespinbox.moc

#>+ 2
mocs: doublespinbox.moc

#>+ 3
scopescreen.moc: $(srcdir)/scopescreen.h
	$(MOC) $(srcdir)/scopescreen.h -o scopescreen.moc

#>+ 2
mocs: scopescreen.moc

#>+ 3
logview.moc: $(srcdir)/logview.h
	$(MOC) $(srcdir)/logview.h -o logview.moc

#>+ 2
mocs: logview.moc

#>+ 3
richtexteditor.moc: $(srcdir)/richtexteditor.h
	$(MOC) $(srcdir)/richtexteditor.h -o richtexteditor.moc

#>+ 2
mocs: richtexteditor.moc

#>+ 3
outputmethoddlg.moc: $(srcdir)/outputmethoddlg.h
	$(MOC) $(srcdir)/outputmethoddlg.h -o outputmethoddlg.moc

#>+ 2
mocs: outputmethoddlg.moc

#>+ 3
clean-metasources:
	-rm -f  oscilloscope.moc itemselector.moc lineedit.moc microsettingsdlg.moc scopescreenview.moc newfiledlg.moc microselectwidget.moc programmerdlg.moc contexthelp.moc colorcombo.moc oscilloscopeview.moc scopeviewbase.moc probepositioner.moc settingsdlg.moc symbolviewer.moc projectdlgs.moc doublespinbox.moc scopescreen.moc logview.moc richtexteditor.moc outputmethoddlg.moc

#>+ 2
KDE_DIST=generaloptionswidget.ui programmerwidget.ui contexthelpwidget.ui microsettingsdlg.h doublespinbox.h scopescreenwidget.ui logicwidget.ui newprojectwidget.ui processingoptionswidget.ui gpasmsettingswidget.ui contexthelp.h microsettingswidget.ui outputmethoddlg.h itemselector.h newfilewidget.ui outputmethodwidget.ui createsubprojectwidget.ui Makefile.in sdccoptionswidget.ui picprogrammerconfigwidget.ui logview.h oscilloscopewidget.ui newfiledlg.h linkeroptionswidget.ui asmformattingwidget.ui newpinmappingwidget.ui Makefile.am 

#>+ 21
clean-ui:
	-rm -f \
	asmformattingwidget.cpp asmformattingwidget.h asmformattingwidget.moc \
	gpasmsettingswidget.cpp gpasmsettingswidget.h gpasmsettingswidget.moc \
	logicwidget.cpp logicwidget.h logicwidget.moc \
	newfilewidget.cpp newfilewidget.h newfilewidget.moc \
	newprojectwidget.cpp newprojectwidget.h newprojectwidget.moc \
	outputmethodwidget.cpp outputmethodwidget.h outputmethodwidget.moc \
	microsettingswidget.cpp microsettingswidget.h microsettingswidget.moc \
	oscilloscopewidget.cpp oscilloscopewidget.h oscilloscopewidget.moc \
	generaloptionswidget.cpp generaloptionswidget.h generaloptionswidget.moc \
	createsubprojectwidget.cpp createsubprojectwidget.h createsubprojectwidget.moc \
	processingoptionswidget.cpp processingoptionswidget.h processingoptionswidget.moc \
	sdccoptionswidget.cpp sdccoptionswidget.h sdccoptionswidget.moc \
	linkeroptionswidget.cpp linkeroptionswidget.h linkeroptionswidget.moc \
	picprogrammerconfigwidget.cpp picprogrammerconfigwidget.h picprogrammerconfigwidget.moc \
	newpinmappingwidget.cpp newpinmappingwidget.h newpinmappingwidget.moc \
	programmerwidget.cpp programmerwidget.h programmerwidget.moc \
	contexthelpwidget.cpp contexthelpwidget.h contexthelpwidget.moc \
	scopescreenwidget.cpp scopescreenwidget.h scopescreenwidget.moc 

#>+ 2
docs-am:

#>+ 15
force-reedit:
		@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/gui/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/gui/Makefile
	cd $(top_srcdir) && perl admin/am_edit src/gui/Makefile.in


#>+ 21
clean-bcheck: 
	rm -f *.bchecktest.cc *.bchecktest.cc.class a.out

bcheck: bcheck-recursive

bcheck-am:
	@for i in ; do \
	    if test $(srcdir)/$$i -nt $$i.bchecktest.cc; then \
	        echo "int main() {return 0;}" > $$i.bchecktest.cc ; \
	        echo "#include \"$$i\"" >> $$i.bchecktest.cc ; \
	        echo "$$i"; \
	        if ! $(CXXCOMPILE)  --dump-class-hierarchy -c $$i.bchecktest.cc; then \
	            rm -f $$i.bchecktest.cc; exit 1; \
	        fi ; \
	        echo "" >> $$i.bchecktest.cc.class; \
	        perl $(top_srcdir)/admin/bcheck.pl $$i.bchecktest.cc.class || { rm -f $$i.bchecktest.cc; exit 1; }; \
	        rm -f a.out; \
	    fi ; \
	done


#>+ 11
libgui_la.all_cpp.cpp: $(srcdir)/Makefile.in $(srcdir)/contexthelp.cpp $(srcdir)/doublespinbox.cpp $(srcdir)/itemselector.cpp $(srcdir)/microsettingsdlg.cpp $(srcdir)/newfiledlg.cpp $(srcdir)/outputmethoddlg.cpp $(srcdir)/settingsdlg.cpp $(srcdir)/oscilloscope.cpp $(srcdir)/oscilloscopeview.cpp $(srcdir)/probepositioner.cpp $(srcdir)/logview.cpp $(srcdir)/projectdlgs.cpp $(srcdir)/microselectwidget.cpp $(srcdir)/symbolviewer.cpp $(srcdir)/programmerdlg.cpp $(srcdir)/colorcombo.cpp $(srcdir)/scopescreenview.cpp $(srcdir)/scopescreen.cpp $(srcdir)/scopeviewbase.cpp $(srcdir)/richtexteditor.cpp $(srcdir)/lineedit.cpp asmformattingwidget.cpp gpasmsettingswidget.cpp logicwidget.cpp newfilewidget.cpp newprojectwidget.cpp outputmethodwidget.cpp microsettingswidget.cpp oscilloscopewidget.cpp generaloptionswidget.cpp createsubprojectwidget.cpp processingoptionswidget.cpp sdccoptionswidget.cpp linkeroptionswidget.cpp picprogrammerconfigwidget.cpp newpinmappingwidget.cpp programmerwidget.cpp contexthelpwidget.cpp scopescreenwidget.cpp  generaloptionswidget.moc microsettingsdlg.moc lineedit.moc microselectwidget.moc contexthelp.moc colorcombo.moc oscilloscopeview.moc processingoptionswidget.moc probepositioner.moc picprogrammerconfigwidget.moc programmerwidget.moc projectdlgs.moc symbolviewer.moc doublespinbox.moc logview.moc linkeroptionswidget.moc richtexteditor.moc newprojectwidget.moc asmformattingwidget.moc outputmethoddlg.moc oscilloscope.moc sdccoptionswidget.moc itemselector.moc newpinmappingwidget.moc scopescreenwidget.moc createsubprojectwidget.moc scopescreenview.moc newfiledlg.moc microsettingswidget.moc gpasmsettingswidget.moc programmerdlg.moc logicwidget.moc contexthelpwidget.moc scopeviewbase.moc oscilloscopewidget.moc newfilewidget.moc settingsdlg.moc scopescreen.moc outputmethodwidget.moc
	@echo 'creating libgui_la.all_cpp.cpp ...'; \
	rm -f libgui_la.all_cpp.files libgui_la.all_cpp.final; \
	echo "#define KDE_USE_FINAL 1" >> libgui_la.all_cpp.final; \
	for file in contexthelp.cpp doublespinbox.cpp itemselector.cpp microsettingsdlg.cpp newfiledlg.cpp outputmethoddlg.cpp settingsdlg.cpp oscilloscope.cpp oscilloscopeview.cpp probepositioner.cpp logview.cpp projectdlgs.cpp microselectwidget.cpp symbolviewer.cpp programmerdlg.cpp colorcombo.cpp scopescreenview.cpp scopescreen.cpp scopeviewbase.cpp richtexteditor.cpp lineedit.cpp asmformattingwidget.cpp gpasmsettingswidget.cpp logicwidget.cpp newfilewidget.cpp newprojectwidget.cpp outputmethodwidget.cpp microsettingswidget.cpp oscilloscopewidget.cpp generaloptionswidget.cpp createsubprojectwidget.cpp processingoptionswidget.cpp sdccoptionswidget.cpp linkeroptionswidget.cpp picprogrammerconfigwidget.cpp newpinmappingwidget.cpp programmerwidget.cpp contexthelpwidget.cpp scopescreenwidget.cpp ; do \
	  echo "#include \"$$file\"" >> libgui_la.all_cpp.files; \
	  test ! -f $(srcdir)/$$file || egrep '^#pragma +implementation' $(srcdir)/$$file >> libgui_la.all_cpp.final; \
	done; \
	cat libgui_la.all_cpp.final libgui_la.all_cpp.files > libgui_la.all_cpp.cpp; \
	rm -f libgui_la.all_cpp.final libgui_la.all_cpp.files

#>+ 3
clean-final:
	-rm -f libgui_la.all_cpp.cpp

#>+ 3
final:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_final_OBJECTS)" all-am

#>+ 3
final-install:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_final_OBJECTS)" install-am

#>+ 3
no-final:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_nofinal_OBJECTS)" all-am

#>+ 3
no-final-install:
	$(MAKE) libgui_la_OBJECTS="$(libgui_la_nofinal_OBJECTS)" install-am

#>+ 3
kde-rpo-clean:
	-rm -f *.rpo

#>+ 66
newfiledlg.o: newfiledlg.moc 
newfiledlg.lo: newfiledlg.moc 
programmerdlg.o: programmerdlg.moc 
doublespinbox.lo: doublespinbox.moc 
contexthelp.lo: contexthelp.moc 
symbolviewer.o: symbolviewer.moc 
contexthelp.o: contexthelp.moc 
scopescreenview.lo: scopescreenview.moc 
programmerdlg.lo: programmerdlg.moc 
$(srcdir)/colorcombo.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
microselectwidget.lo: microselectwidget.moc 
richtexteditor.lo: richtexteditor.moc 
nmcheck-am: nmcheck
projectdlgs.o: projectdlgs.moc 
$(srcdir)/lineedit.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
oscilloscope.lo: oscilloscope.moc 
$(srcdir)/scopescreenview.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
scopeviewbase.lo: scopeviewbase.moc 
itemselector.lo: itemselector.moc 
$(srcdir)/probepositioner.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
richtexteditor.o: richtexteditor.moc 
$(srcdir)/scopeviewbase.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
oscilloscopeview.lo: oscilloscopeview.moc 
$(srcdir)/contexthelp.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
colorcombo.lo: colorcombo.moc 
$(srcdir)/newfiledlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
scopeviewbase.o: scopeviewbase.moc 
$(srcdir)/logview.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
$(srcdir)/microselectwidget.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
$(srcdir)/oscilloscopeview.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
logview.lo: logview.moc 
$(srcdir)/symbolviewer.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
$(srcdir)/programmerdlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
lineedit.lo: lineedit.moc 
$(srcdir)/outputmethoddlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
$(srcdir)/itemselector.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
settingsdlg.o: settingsdlg.moc 
$(srcdir)/projectdlgs.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
itemselector.o: itemselector.moc 
symbolviewer.lo: symbolviewer.moc 
lineedit.o: lineedit.moc 
scopescreenview.o: scopescreenview.moc 
scopescreen.o: scopescreen.moc 
$(srcdir)/oscilloscope.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
outputmethoddlg.o: outputmethoddlg.moc 
microsettingsdlg.lo: microsettingsdlg.moc 
outputmethoddlg.lo: outputmethoddlg.moc 
$(srcdir)/doublespinbox.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
oscilloscope.o: oscilloscope.moc 
probepositioner.lo: probepositioner.moc 
colorcombo.o: colorcombo.moc 
scopescreen.lo: scopescreen.moc 
logview.o: logview.moc 
microselectwidget.o: microselectwidget.moc 
microsettingsdlg.o: microsettingsdlg.moc 
nmcheck: 
$(srcdir)/settingsdlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
settingsdlg.lo: settingsdlg.moc 
projectdlgs.lo: projectdlgs.moc 
probepositioner.o: probepositioner.moc 
$(srcdir)/microsettingsdlg.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
doublespinbox.o: doublespinbox.moc 
$(srcdir)/richtexteditor.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
$(srcdir)/scopescreen.cpp: asmformattingwidget.h gpasmsettingswidget.h logicwidget.h newfilewidget.h newprojectwidget.h outputmethodwidget.h microsettingswidget.h oscilloscopewidget.h generaloptionswidget.h createsubprojectwidget.h processingoptionswidget.h sdccoptionswidget.h linkeroptionswidget.h picprogrammerconfigwidget.h newpinmappingwidget.h programmerwidget.h contexthelpwidget.h scopescreenwidget.h 
oscilloscopeview.o: oscilloscopeview.moc 

#>+ 270
linkeroptionswidget.cpp: $(srcdir)/linkeroptionswidget.ui linkeroptionswidget.h linkeroptionswidget.moc
	rm -f linkeroptionswidget.cpp
	echo '#include <kdialog.h>' > linkeroptionswidget.cpp
	echo '#include <klocale.h>' >> linkeroptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i linkeroptionswidget.h $(srcdir)/linkeroptionswidget.ui > linkeroptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" linkeroptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_linkeroptionswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> linkeroptionswidget.cpp ;\
	rm -f linkeroptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "linkeroptionswidget.moc"' >> linkeroptionswidget.cpp; else rm -f linkeroptionswidget.cpp ; exit $$ret ; fi

linkeroptionswidget.h: $(srcdir)/linkeroptionswidget.ui
	rm -rf linkeroptionswidget.h;
	$(UIC) $(srcdir)/linkeroptionswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> linkeroptionswidget.h ;
linkeroptionswidget.moc: linkeroptionswidget.h
	$(MOC) linkeroptionswidget.h -o linkeroptionswidget.moc

generaloptionswidget.cpp: $(srcdir)/generaloptionswidget.ui generaloptionswidget.h generaloptionswidget.moc
	rm -f generaloptionswidget.cpp
	echo '#include <kdialog.h>' > generaloptionswidget.cpp
	echo '#include <klocale.h>' >> generaloptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i generaloptionswidget.h $(srcdir)/generaloptionswidget.ui > generaloptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" generaloptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_generaloptionswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> generaloptionswidget.cpp ;\
	rm -f generaloptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "generaloptionswidget.moc"' >> generaloptionswidget.cpp; else rm -f generaloptionswidget.cpp ; exit $$ret ; fi

generaloptionswidget.h: $(srcdir)/generaloptionswidget.ui
	rm -rf generaloptionswidget.h;
	$(UIC) $(srcdir)/generaloptionswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> generaloptionswidget.h ;
generaloptionswidget.moc: generaloptionswidget.h
	$(MOC) generaloptionswidget.h -o generaloptionswidget.moc

logicwidget.cpp: $(srcdir)/logicwidget.ui logicwidget.h logicwidget.moc
	rm -f logicwidget.cpp
	echo '#include <kdialog.h>' > logicwidget.cpp
	echo '#include <klocale.h>' >> logicwidget.cpp
	$(UIC) -tr ${UIC_TR} -i logicwidget.h $(srcdir)/logicwidget.ui > logicwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" logicwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_logicwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> logicwidget.cpp ;\
	rm -f logicwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "logicwidget.moc"' >> logicwidget.cpp; else rm -f logicwidget.cpp ; exit $$ret ; fi

logicwidget.h: $(srcdir)/logicwidget.ui
	rm -rf logicwidget.h;
	$(UIC) $(srcdir)/logicwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> logicwidget.h ;
logicwidget.moc: logicwidget.h
	$(MOC) logicwidget.h -o logicwidget.moc

outputmethodwidget.cpp: $(srcdir)/outputmethodwidget.ui outputmethodwidget.h outputmethodwidget.moc
	rm -f outputmethodwidget.cpp
	echo '#include <kdialog.h>' > outputmethodwidget.cpp
	echo '#include <klocale.h>' >> outputmethodwidget.cpp
	$(UIC) -tr ${UIC_TR} -i outputmethodwidget.h $(srcdir)/outputmethodwidget.ui > outputmethodwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" outputmethodwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_outputmethodwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> outputmethodwidget.cpp ;\
	rm -f outputmethodwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "outputmethodwidget.moc"' >> outputmethodwidget.cpp; else rm -f outputmethodwidget.cpp ; exit $$ret ; fi

outputmethodwidget.h: $(srcdir)/outputmethodwidget.ui
	rm -rf outputmethodwidget.h;
	$(UIC) $(srcdir)/outputmethodwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> outputmethodwidget.h ;
outputmethodwidget.moc: outputmethodwidget.h
	$(MOC) outputmethodwidget.h -o outputmethodwidget.moc

picprogrammerconfigwidget.cpp: $(srcdir)/picprogrammerconfigwidget.ui picprogrammerconfigwidget.h picprogrammerconfigwidget.moc
	rm -f picprogrammerconfigwidget.cpp
	echo '#include <kdialog.h>' > picprogrammerconfigwidget.cpp
	echo '#include <klocale.h>' >> picprogrammerconfigwidget.cpp
	$(UIC) -tr ${UIC_TR} -i picprogrammerconfigwidget.h $(srcdir)/picprogrammerconfigwidget.ui > picprogrammerconfigwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" picprogrammerconfigwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_picprogrammerconfigwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> picprogrammerconfigwidget.cpp ;\
	rm -f picprogrammerconfigwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "picprogrammerconfigwidget.moc"' >> picprogrammerconfigwidget.cpp; else rm -f picprogrammerconfigwidget.cpp ; exit $$ret ; fi

picprogrammerconfigwidget.h: $(srcdir)/picprogrammerconfigwidget.ui
	rm -rf picprogrammerconfigwidget.h;
	$(UIC) $(srcdir)/picprogrammerconfigwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> picprogrammerconfigwidget.h ;
picprogrammerconfigwidget.moc: picprogrammerconfigwidget.h
	$(MOC) picprogrammerconfigwidget.h -o picprogrammerconfigwidget.moc

processingoptionswidget.cpp: $(srcdir)/processingoptionswidget.ui processingoptionswidget.h processingoptionswidget.moc
	rm -f processingoptionswidget.cpp
	echo '#include <kdialog.h>' > processingoptionswidget.cpp
	echo '#include <klocale.h>' >> processingoptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i processingoptionswidget.h $(srcdir)/processingoptionswidget.ui > processingoptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" processingoptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_processingoptionswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> processingoptionswidget.cpp ;\
	rm -f processingoptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "processingoptionswidget.moc"' >> processingoptionswidget.cpp; else rm -f processingoptionswidget.cpp ; exit $$ret ; fi

processingoptionswidget.h: $(srcdir)/processingoptionswidget.ui
	rm -rf processingoptionswidget.h;
	$(UIC) $(srcdir)/processingoptionswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> processingoptionswidget.h ;
processingoptionswidget.moc: processingoptionswidget.h
	$(MOC) processingoptionswidget.h -o processingoptionswidget.moc

oscilloscopewidget.cpp: $(srcdir)/oscilloscopewidget.ui oscilloscopewidget.h oscilloscopewidget.moc
	rm -f oscilloscopewidget.cpp
	echo '#include <kdialog.h>' > oscilloscopewidget.cpp
	echo '#include <klocale.h>' >> oscilloscopewidget.cpp
	$(UIC) -tr ${UIC_TR} -i oscilloscopewidget.h $(srcdir)/oscilloscopewidget.ui > oscilloscopewidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" oscilloscopewidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_oscilloscopewidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> oscilloscopewidget.cpp ;\
	rm -f oscilloscopewidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "oscilloscopewidget.moc"' >> oscilloscopewidget.cpp; else rm -f oscilloscopewidget.cpp ; exit $$ret ; fi

oscilloscopewidget.h: $(srcdir)/oscilloscopewidget.ui
	rm -rf oscilloscopewidget.h;
	$(UIC) $(srcdir)/oscilloscopewidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> oscilloscopewidget.h ;
oscilloscopewidget.moc: oscilloscopewidget.h
	$(MOC) oscilloscopewidget.h -o oscilloscopewidget.moc

programmerwidget.cpp: $(srcdir)/programmerwidget.ui programmerwidget.h programmerwidget.moc
	rm -f programmerwidget.cpp
	echo '#include <kdialog.h>' > programmerwidget.cpp
	echo '#include <klocale.h>' >> programmerwidget.cpp
	$(UIC) -tr ${UIC_TR} -i programmerwidget.h $(srcdir)/programmerwidget.ui > programmerwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" programmerwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_programmerwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> programmerwidget.cpp ;\
	rm -f programmerwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "programmerwidget.moc"' >> programmerwidget.cpp; else rm -f programmerwidget.cpp ; exit $$ret ; fi

programmerwidget.h: $(srcdir)/programmerwidget.ui
	rm -rf programmerwidget.h;
	$(UIC) $(srcdir)/programmerwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> programmerwidget.h ;
programmerwidget.moc: programmerwidget.h
	$(MOC) programmerwidget.h -o programmerwidget.moc

gpasmsettingswidget.cpp: $(srcdir)/gpasmsettingswidget.ui gpasmsettingswidget.h gpasmsettingswidget.moc
	rm -f gpasmsettingswidget.cpp
	echo '#include <kdialog.h>' > gpasmsettingswidget.cpp
	echo '#include <klocale.h>' >> gpasmsettingswidget.cpp
	$(UIC) -tr ${UIC_TR} -i gpasmsettingswidget.h $(srcdir)/gpasmsettingswidget.ui > gpasmsettingswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" gpasmsettingswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_gpasmsettingswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> gpasmsettingswidget.cpp ;\
	rm -f gpasmsettingswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "gpasmsettingswidget.moc"' >> gpasmsettingswidget.cpp; else rm -f gpasmsettingswidget.cpp ; exit $$ret ; fi

gpasmsettingswidget.h: $(srcdir)/gpasmsettingswidget.ui
	rm -rf gpasmsettingswidget.h;
	$(UIC) $(srcdir)/gpasmsettingswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> gpasmsettingswidget.h ;
gpasmsettingswidget.moc: gpasmsettingswidget.h
	$(MOC) gpasmsettingswidget.h -o gpasmsettingswidget.moc

newfilewidget.cpp: $(srcdir)/newfilewidget.ui newfilewidget.h newfilewidget.moc
	rm -f newfilewidget.cpp
	echo '#include <kdialog.h>' > newfilewidget.cpp
	echo '#include <klocale.h>' >> newfilewidget.cpp
	$(UIC) -tr ${UIC_TR} -i newfilewidget.h $(srcdir)/newfilewidget.ui > newfilewidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newfilewidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newfilewidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newfilewidget.cpp ;\
	rm -f newfilewidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newfilewidget.moc"' >> newfilewidget.cpp; else rm -f newfilewidget.cpp ; exit $$ret ; fi

newfilewidget.h: $(srcdir)/newfilewidget.ui
	rm -rf newfilewidget.h;
	$(UIC) $(srcdir)/newfilewidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newfilewidget.h ;
newfilewidget.moc: newfilewidget.h
	$(MOC) newfilewidget.h -o newfilewidget.moc

sdccoptionswidget.cpp: $(srcdir)/sdccoptionswidget.ui sdccoptionswidget.h sdccoptionswidget.moc
	rm -f sdccoptionswidget.cpp
	echo '#include <kdialog.h>' > sdccoptionswidget.cpp
	echo '#include <klocale.h>' >> sdccoptionswidget.cpp
	$(UIC) -tr ${UIC_TR} -i sdccoptionswidget.h $(srcdir)/sdccoptionswidget.ui > sdccoptionswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" sdccoptionswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_sdccoptionswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> sdccoptionswidget.cpp ;\
	rm -f sdccoptionswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "sdccoptionswidget.moc"' >> sdccoptionswidget.cpp; else rm -f sdccoptionswidget.cpp ; exit $$ret ; fi

sdccoptionswidget.h: $(srcdir)/sdccoptionswidget.ui
	rm -rf sdccoptionswidget.h;
	$(UIC) $(srcdir)/sdccoptionswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> sdccoptionswidget.h ;
sdccoptionswidget.moc: sdccoptionswidget.h
	$(MOC) sdccoptionswidget.h -o sdccoptionswidget.moc

contexthelpwidget.cpp: $(srcdir)/contexthelpwidget.ui contexthelpwidget.h contexthelpwidget.moc
	rm -f contexthelpwidget.cpp
	echo '#include <kdialog.h>' > contexthelpwidget.cpp
	echo '#include <klocale.h>' >> contexthelpwidget.cpp
	$(UIC) -tr ${UIC_TR} -i contexthelpwidget.h $(srcdir)/contexthelpwidget.ui > contexthelpwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" contexthelpwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_contexthelpwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> contexthelpwidget.cpp ;\
	rm -f contexthelpwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "contexthelpwidget.moc"' >> contexthelpwidget.cpp; else rm -f contexthelpwidget.cpp ; exit $$ret ; fi

contexthelpwidget.h: $(srcdir)/contexthelpwidget.ui
	rm -rf contexthelpwidget.h;
	$(UIC) $(srcdir)/contexthelpwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> contexthelpwidget.h ;
contexthelpwidget.moc: contexthelpwidget.h
	$(MOC) contexthelpwidget.h -o contexthelpwidget.moc

asmformattingwidget.cpp: $(srcdir)/asmformattingwidget.ui asmformattingwidget.h asmformattingwidget.moc
	rm -f asmformattingwidget.cpp
	echo '#include <kdialog.h>' > asmformattingwidget.cpp
	echo '#include <klocale.h>' >> asmformattingwidget.cpp
	$(UIC) -tr ${UIC_TR} -i asmformattingwidget.h $(srcdir)/asmformattingwidget.ui > asmformattingwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" asmformattingwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_asmformattingwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> asmformattingwidget.cpp ;\
	rm -f asmformattingwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "asmformattingwidget.moc"' >> asmformattingwidget.cpp; else rm -f asmformattingwidget.cpp ; exit $$ret ; fi

asmformattingwidget.h: $(srcdir)/asmformattingwidget.ui
	rm -rf asmformattingwidget.h;
	$(UIC) $(srcdir)/asmformattingwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> asmformattingwidget.h ;
asmformattingwidget.moc: asmformattingwidget.h
	$(MOC) asmformattingwidget.h -o asmformattingwidget.moc

microsettingswidget.cpp: $(srcdir)/microsettingswidget.ui microsettingswidget.h microsettingswidget.moc
	rm -f microsettingswidget.cpp
	echo '#include <kdialog.h>' > microsettingswidget.cpp
	echo '#include <klocale.h>' >> microsettingswidget.cpp
	$(UIC) -tr ${UIC_TR} -i microsettingswidget.h $(srcdir)/microsettingswidget.ui > microsettingswidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" microsettingswidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_microsettingswidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> microsettingswidget.cpp ;\
	rm -f microsettingswidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "microsettingswidget.moc"' >> microsettingswidget.cpp; else rm -f microsettingswidget.cpp ; exit $$ret ; fi

microsettingswidget.h: $(srcdir)/microsettingswidget.ui
	rm -rf microsettingswidget.h;
	$(UIC) $(srcdir)/microsettingswidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> microsettingswidget.h ;
microsettingswidget.moc: microsettingswidget.h
	$(MOC) microsettingswidget.h -o microsettingswidget.moc

newpinmappingwidget.cpp: $(srcdir)/newpinmappingwidget.ui newpinmappingwidget.h newpinmappingwidget.moc
	rm -f newpinmappingwidget.cpp
	echo '#include <kdialog.h>' > newpinmappingwidget.cpp
	echo '#include <klocale.h>' >> newpinmappingwidget.cpp
	$(UIC) -tr ${UIC_TR} -i newpinmappingwidget.h $(srcdir)/newpinmappingwidget.ui > newpinmappingwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newpinmappingwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newpinmappingwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newpinmappingwidget.cpp ;\
	rm -f newpinmappingwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newpinmappingwidget.moc"' >> newpinmappingwidget.cpp; else rm -f newpinmappingwidget.cpp ; exit $$ret ; fi

newpinmappingwidget.h: $(srcdir)/newpinmappingwidget.ui
	rm -rf newpinmappingwidget.h;
	$(UIC) $(srcdir)/newpinmappingwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newpinmappingwidget.h ;
newpinmappingwidget.moc: newpinmappingwidget.h
	$(MOC) newpinmappingwidget.h -o newpinmappingwidget.moc

scopescreenwidget.cpp: $(srcdir)/scopescreenwidget.ui scopescreenwidget.h scopescreenwidget.moc
	rm -f scopescreenwidget.cpp
	echo '#include <kdialog.h>' > scopescreenwidget.cpp
	echo '#include <klocale.h>' >> scopescreenwidget.cpp
	$(UIC) -tr ${UIC_TR} -i scopescreenwidget.h $(srcdir)/scopescreenwidget.ui > scopescreenwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" scopescreenwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_scopescreenwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> scopescreenwidget.cpp ;\
	rm -f scopescreenwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "scopescreenwidget.moc"' >> scopescreenwidget.cpp; else rm -f scopescreenwidget.cpp ; exit $$ret ; fi

scopescreenwidget.h: $(srcdir)/scopescreenwidget.ui
	rm -rf scopescreenwidget.h;
	$(UIC) $(srcdir)/scopescreenwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> scopescreenwidget.h ;
scopescreenwidget.moc: scopescreenwidget.h
	$(MOC) scopescreenwidget.h -o scopescreenwidget.moc

newprojectwidget.cpp: $(srcdir)/newprojectwidget.ui newprojectwidget.h newprojectwidget.moc
	rm -f newprojectwidget.cpp
	echo '#include <kdialog.h>' > newprojectwidget.cpp
	echo '#include <klocale.h>' >> newprojectwidget.cpp
	$(UIC) -tr ${UIC_TR} -i newprojectwidget.h $(srcdir)/newprojectwidget.ui > newprojectwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" newprojectwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_newprojectwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> newprojectwidget.cpp ;\
	rm -f newprojectwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "newprojectwidget.moc"' >> newprojectwidget.cpp; else rm -f newprojectwidget.cpp ; exit $$ret ; fi

newprojectwidget.h: $(srcdir)/newprojectwidget.ui
	rm -rf newprojectwidget.h;
	$(UIC) $(srcdir)/newprojectwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> newprojectwidget.h ;
newprojectwidget.moc: newprojectwidget.h
	$(MOC) newprojectwidget.h -o newprojectwidget.moc

createsubprojectwidget.cpp: $(srcdir)/createsubprojectwidget.ui createsubprojectwidget.h createsubprojectwidget.moc
	rm -f createsubprojectwidget.cpp
	echo '#include <kdialog.h>' > createsubprojectwidget.cpp
	echo '#include <klocale.h>' >> createsubprojectwidget.cpp
	$(UIC) -tr ${UIC_TR} -i createsubprojectwidget.h $(srcdir)/createsubprojectwidget.ui > createsubprojectwidget.cpp.temp ; ret=$$?; \
	$(PERL) -pe "s,${UIC_TR}( \"\" ),QString::null,g" createsubprojectwidget.cpp.temp | $(PERL) -pe "s,${UIC_TR}( \"\"\, \"\" ),QString::null,g" | $(PERL) -pe "s,image([0-9][0-9]*)_data,img\$$1_createsubprojectwidget,g" | $(PERL) -pe "s,: QWizard\(,: KWizard(,g" >> createsubprojectwidget.cpp ;\
	rm -f createsubprojectwidget.cpp.temp ;\
	if test "$$ret" = 0; then echo '#include "createsubprojectwidget.moc"' >> createsubprojectwidget.cpp; else rm -f createsubprojectwidget.cpp ; exit $$ret ; fi

createsubprojectwidget.h: $(srcdir)/createsubprojectwidget.ui
	rm -rf createsubprojectwidget.h;
	$(UIC) $(srcdir)/createsubprojectwidget.ui | $(PERL) -pi -e "s,public QWizard,public KWizard,g; s,#include <qwizard.h>,#include <kwizard.h>,g" >> createsubprojectwidget.h ;
createsubprojectwidget.moc: createsubprojectwidget.h
	$(MOC) createsubprojectwidget.h -o createsubprojectwidget.moc
