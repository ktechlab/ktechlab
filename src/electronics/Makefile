# Makefile.in generated by unsermake
####################################

top_builddir = ../..
top_srcdir = ../..
srcdir = .
.FORWARDS: all install install-data install-exec clean check force-reedit

all:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake all

install:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake install

install-data:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake install-data

install-exec:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake install-exec

clean:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake clean

check:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake check

force-reedit:
	@echo 'WARNING: use unsermake instead of make or use a wrapper script, e.g. makeobj!!!'
	unsermake force-reedit

$(top_builddir)/src/electronics/Makefile: $(top_builddir)/config.status $(top_srcdir)/src/electronics/Makefile.in
	cd $(top_builddir) && $(SHELL) ./config.status src/electronics/Makefile

all: $(top_builddir)/src/electronics/Makefile
final: 
	unsermake -C $(top_builddir)/src/electronics UNSERMAKE_FORCE_FINAL=1 libelectronics.la

METASOURCES = subcircuits=./subcircuits.h=subcircuits.cpp ecnode=./ecnode.h=ecnode.cpp gpsimprocessor=./gpsimprocessor.h=gpsimprocessor.cpp component=./component.h=component.cpp componentmodellibrary=./componentmodellibrary.h=componentmodellibrary.cpp switch=./switch.h=switch.cpp
__um_includes_asmparser.h = gpsimprocessor.cpp
__um_includes_assert.h = pin.cpp gpsimprocessor.cpp componentmodellibrary.cpp wire.cpp
__um_includes_bjt.h = component.cpp
__um_includes_canvasitemparts.h = component.cpp
__um_includes_capacitance.h = component.cpp
__um_includes_cccs.h = component.cpp
__um_includes_ccvs.h = component.cpp
__um_includes_circuitdocument.h = subcircuits.cpp component.cpp switch.cpp ecnode.cpp
__um_includes_cmath = component.cpp switch.cpp ecnode.cpp
__um_includes_cnitem.h = component.cpp switch.cpp ecnode.cpp
__um_includes_component.h = component.cpp switch.cpp ecnode.cpp
__um_includes_component.moc = component.cpp
__um_includes_componentmodellibrary.h = componentmodellibrary.cpp
__um_includes_componentmodellibrary.moc = componentmodellibrary.cpp
__um_includes_config.h = gpsimprocessor.cpp
__um_includes_connector.h = ecnode.cpp
__um_includes_currentsignal.h = component.cpp
__um_includes_currentsource.h = component.cpp
__um_includes_debugmanager.h = gpsimprocessor.cpp
__um_includes_diode.h = component.cpp
__um_includes_ecnode.h = component.cpp switch.cpp ecnode.cpp
__um_includes_ecnode.moc = ecnode.cpp
__um_includes_ecsubcircuit.h = subcircuits.cpp
__um_includes_errno.h = port.cpp
__um_includes_fcntl.h = port.cpp
__um_includes_flowcodedocument.h = gpsimprocessor.cpp
__um_includes_gpsimprocessor.h = gpsimprocessor.cpp
__um_includes_gpsimprocessor.moc = gpsimprocessor.cpp
__um_includes_inductance.h = component.cpp
__um_includes_itemdocumentdata.h = subcircuits.cpp component.cpp
__um_includes_itemlibrary.h = subcircuits.cpp
__um_includes_itemselector.h = subcircuits.cpp
__um_includes_jfet.h = component.cpp
__um_includes_kapplication.h = subcircuits.cpp
__um_includes_kconfig.h = subcircuits.cpp
__um_includes_kdebug.h = port.cpp pin.cpp subcircuits.cpp component.cpp gpsimprocessor.cpp componentmodellibrary.cpp switch.cpp ecnode.cpp
__um_includes_kiconloader.h = subcircuits.cpp
__um_includes_klocale.h = subcircuits.cpp gpsimprocessor.cpp
__um_includes_kmessagebox.h = gpsimprocessor.cpp
__um_includes_kstandarddirs.h = subcircuits.cpp gpsimprocessor.cpp componentmodellibrary.cpp
__um_includes_ktempfile.h = gpsimprocessor.cpp
__um_includes_language.h = gpsimprocessor.cpp
__um_includes_languagemanager.h = gpsimprocessor.cpp
__um_includes_logic.h = component.cpp
__um_includes_microlibrary.h = gpsimprocessor.cpp
__um_includes_mosfet.h = component.cpp
__um_includes_node.h = component.cpp switch.cpp ecnode.cpp
__um_includes_opamp.h = component.cpp
__um_includes_pin.h = pin.cpp component.cpp switch.cpp ecnode.cpp wire.cpp
__um_includes_port.h = port.cpp
__um_includes_processchain.h = gpsimprocessor.cpp
__um_includes_qbitarray.h = component.cpp
__um_includes_qdatetime.h = componentmodellibrary.cpp
__um_includes_qdict.h = componentmodellibrary.cpp
__um_includes_qfile.h = subcircuits.cpp gpsimprocessor.cpp componentmodellibrary.cpp
__um_includes_qglobal.h = port.cpp
__um_includes_qguardedptr.h = pin.cpp component.cpp switch.cpp ecnode.cpp wire.cpp
__um_includes_qmap.h = gpsimprocessor.cpp componentmodellibrary.cpp
__um_includes_qobject.h = pin.cpp subcircuits.cpp component.cpp gpsimprocessor.cpp componentmodellibrary.cpp switch.cpp ecnode.cpp wire.cpp
__um_includes_qpainter.h = component.cpp ecnode.cpp
__um_includes_qstringlist.h = port.cpp componentmodellibrary.cpp
__um_includes_qtextstream.h = subcircuits.cpp gpsimprocessor.cpp
__um_includes_qtimer.h = gpsimprocessor.cpp switch.cpp
__um_includes_qvaluelist.h = pin.cpp component.cpp gpsimprocessor.cpp switch.cpp ecnode.cpp wire.cpp
__um_includes_qvaluevector.h = component.cpp gpsimprocessor.cpp switch.cpp ecnode.cpp
__um_includes_qwidget.h = component.cpp
__um_includes_qwmatrix.h = component.cpp
__um_includes_resistance.h = component.cpp switch.cpp
__um_includes_simulator.h = component.cpp gpsimprocessor.cpp switch.cpp
__um_includes_sourceline.h = gpsimprocessor.cpp
__um_includes_stdlib.h = switch.cpp
__um_includes_subcircuits.h = subcircuits.cpp
__um_includes_subcircuits.moc = subcircuits.cpp
__um_includes_switch.h = component.cpp switch.cpp
__um_includes_switch.moc = switch.cpp
__um_includes_termios.h = port.cpp
__um_includes_time.h = switch.cpp
__um_includes_unistd.h = port.cpp
__um_includes_vccs.h = component.cpp
__um_includes_vcvs.h = component.cpp
__um_includes_voltagepoint.h = component.cpp
__um_includes_voltagesignal.h = component.cpp
__um_includes_voltagesource.h = component.cpp
__um_includes_wire.h = pin.cpp component.cpp switch.cpp ecnode.cpp wire.cpp
.PHONY: all final
